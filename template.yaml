apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: python-app-template
metadata:
  name: python-app-template
objects:
  - apiVersion: v1
    kind: ImageStream
    metadata:
      labels:
        app: "python-app-${GIT_REF}"
      name: python-27-rhel7
      namespace: simple-deployment-scenario
    spec:
      lookupPolicy:
        local: false
      tags:
        - annotations:
            openshift.io/imported-from: registry.access.redhat.com/rhscl/python-27-rhel7
          from:
            kind: DockerImage
            name: registry.access.redhat.com/rhscl/python-27-rhel7
          importPolicy: {}
          name: latest
          referencePolicy:
            type: Source
  - apiVersion: v1
    kind: ImageStream
    metadata:
      labels:
        app: "python-app-${GIT_REF}"
      name: "python-app-${GIT_REF}"
      namespace: simple-deployment-scenario
    spec:
      lookupPolicy:
        local: false
  - apiVersion: v1
    kind: BuildConfig
    metadata:
      labels:
        app: "python-app-${GIT_REF}"
      name: "python-app-${GIT_REF}"
      namespace: simple-deployment-scenario
    spec:
      failedBuildsHistoryLimit: 5
      nodeSelector: null
      output:
        to:
          kind: ImageStreamTag
          name: "python-app-${GIT_REF}:latest"
      postCommit: {}
      resources: {}
      runPolicy: Serial
      source:
        git:
          uri: 'https://github.com/schen1/python-app.git'
          ref: "${GIT_REF}"
        type: Git
      strategy:
        sourceStrategy:
          from:
            kind: ImageStreamTag
            name: 'python-27-rhel7:latest'
        type: Source
      successfulBuildsHistoryLimit: 5
        - type: ConfigChange
          type: ImageChange
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      annotations:
        openshift.io/generated-by: OpenShiftNewApp
      generation: 5
      labels:
        app: "python-app-${GIT_REF}"
      name: "python-app-${GIT_REF}"
      namespace: simple-deployment-scenario
    spec:
      replicas: 1
      selector:
        app: "python-app-${GIT_REF}"
        deploymentconfig: "python-app-${GIT_REF}"
      strategy:
        activeDeadlineSeconds: 21600
        resources: {}
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 600
          updatePeriodSeconds: 1
        type: Rolling
      template:
        metadata:
          annotations:
            openshift.io/generated-by: OpenShiftNewApp
          creationTimestamp: null
          labels:
            app: "python-app-${GIT_REF}"
            deploymentconfig: "python-app-${GIT_REF}"
        spec:
          containers:
            - image: "simple-deployment-scenario/python-app-${GIT_REF}"
              imagePullPolicy: Always
              name: "python-app-${GIT_REF}"
              ports:
                - containerPort: 8080
                  protocol: TCP
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
      test: false
      triggers:
        - type: ConfigChange
        - imageChangeParams:
            automatic: true
            containerNames:
              - "python-app-${GIT_REF}"
            from:
              kind: ImageStreamTag
              name: "python-app-${GIT_REF}:latest"
              namespace: simple-deployment-scenario
          type: ImageChange
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: "python-app-${GIT_REF}"
      name: "python-app-${GIT_REF}"
      namespace: simple-deployment-scenario
    spec:
      ports:
        - name: 8080-tcp
          port: 8080
          protocol: TCP
          targetPort: 8080
      selector:
        app: "python-app-${GIT_REF}"
        deploymentconfig: "python-app-${GIT_REF}"
      sessionAffinity: None
      type: ClusterIP
  - apiVersion: v1
    kind: Route
    metadata:
      annotations:
        openshift.io/host.generated: 'true'
      labels:
        app: "python-app-${GIT_REF}"
      name: "python-app-${GIT_REF}"
      namespace: simple-deployment-scenario
    spec:
      port:
        targetPort: 8080-tcp
      to:
        kind: Service
        name: "python-app-${GIT_REF}"
        weight: 100
      wildcardPolicy: None
  - apiVersion: "v1"
    kind: "BuildConfig"
    metadata:
      name: "python-app-pipeline-${GIT_REF}"
      labels:
        app: "python-app-${GIT_REF}"
    spec:
      source:
        git:
          uri: "https://github.com/schen1/python-app.git"
          ref: ${GIT_REF}
      strategy:
        jenkinsPipelineStrategy:
          jenkinsfilePath: Jenkinsfile
parameters:
  - description: The name of the branch
    displayName: Branch Name
    name: GIT_REF
    value: master
